name: CI

# Contrôle quand le workflow sera déclenché
on:
  # Déclenche le workflow sur les événements push ou pull request mais seulement pour la branche "main"
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Permet d'exécuter ce workflow manuellement depuis l'onglet Actions
  workflow_dispatch:

# Un workflow est composé d'un ou plusieurs jobs qui peuvent s'exécuter séquentiellement ou en parallèle
jobs:
   # Ce workflow contient un seul job appelé "build-and-push"
  build-and-push:
    # Le type de runner sur lequel le job s'exécutera
    runs-on: ubuntu-latest

    # Les étapes représentent une séquence de tâches qui seront exécutées dans le cadre du job
    steps:

      # Récupère votre dépôt sous $GITHUB_WORKSPACE, afin que votre job puisse y accéder
      - name: Cloner le projet dans ce runner
        uses: actions/checkout@v3

      # Exécute une commande unique en utilisant le shell du runner
      - name: Construire l'image Docker (code source)
        run: docker build -t front .

      # Exécute une commande unique en utilisant le shell du runner
      - name: Connexion à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Exécute une commande unique en utilisant le shell du runner
      - name: Tag l'image Docker
        run: docker tag front hamza6/my-image-cicd:latest

      - name: Veirfy
        run: docker images

      - name: Push Image To DockerHub
        run: docker push hamza6/my-image-cicd:latest

  deploy-to-aws:

      runs-on: ubuntu-latest

      needs: build-and-push

      steps: 
        
        - name: Deploy to EC2
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USERNAME }}
            key: ${{ secrets.EC2_PRIVATE_KEY }}
            script: |
              sudo docker ps 